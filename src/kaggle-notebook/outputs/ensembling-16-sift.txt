/kaggle/input/neural-partitioner-dsit/main.py:173: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /usr/local/src/pytorch/torch/csrc/utils/tensor_new.cpp:245.)
  Y = prepare.dist_rank(torch.tensor(X, dtype=float), k_train, opt=options, data=data, distance_metric = distance_metric)
/kaggle/input/neural-partitioner-dsit/main.py:224: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  Y = torch.tensor(Y, dtype=torch.double , device=primary_device)
['neural', 'linear']
n OK training and prediction on the forest will be done using combination of selected models 
RUNNING WITH: epochs=5; lr=0.009; n_bins=16; levels=0; branching=16; model type=None
 -- READING PATHS -- 
preparing knn with k =  10
total_chunks
11112
0/11112
500/11112
1000/11112
1500/11112
2000/11112
2500/11112
3000/11112
3500/11112
4000/11112
4500/11112
5000/11112
5500/11112
6000/11112
6500/11112
7000/11112
7500/11112
8000/11112
8500/11112
9000/11112
9500/11112
10000/11112
10500/11112
11000/11112
Preparing dataset tensor
prepping k-NN Matrix tensor
BUILDING TREE
BUILDING TREE 0 / 3
self n class  16
 -- BUILDING TREE WITH 0 LEVELS AND 16 BRANCHING -- 
BUILDING TREE 1 / 3
self n class  16
 -- BUILDING TREE WITH 0 LEVELS AND 16 BRANCHING -- 
BUILDING TREE 2 / 3
self n class  16
 -- BUILDING TREE WITH 0 LEVELS AND 16 BRANCHING -- 
no of parameters in one model: 35600
training forest
training model  0  /  3
preparing input weights

TRAINING MODEL level : 0, level index: 0 / 1
model loadedd from file  False
training model with 5 iters and 0.009 lr, 128 hidden params and 16 classes
standardizing data 
TRAINING

epoch  1  /  5

b sum  tensor(-0.6390, device='cuda:0')
TRAINING

epoch  2  /  5

b sum  tensor(-0.7706, device='cuda:0')
TRAINING

epoch  3  /  5

b sum  tensor(-0.7795, device='cuda:0')
TRAINING

epoch  4  /  5

b sum  tensor(-0.7869, device='cuda:0')
TRAINING

epoch  5  /  5

b sum  tensor(-0.7858, device='cuda:0')


training model  1  /  3
preparing input weights
model  0  /  1

TRAINING MODEL level : 0, level index: 0 / 1
model loadedd from file  False
training model with 5 iters and 0.009 lr, 128 hidden params and 16 classes
standardizing data 
TRAINING

epoch  1  /  5

b sum  tensor(-0.4824, device='cuda:0')
TRAINING

epoch  2  /  5

b sum  tensor(-0.5009, device='cuda:0')
TRAINING

epoch  3  /  5

b sum  tensor(-0.5546, device='cuda:0')
TRAINING

epoch  4  /  5

b sum  tensor(-0.5955, device='cuda:0')
TRAINING

epoch  5  /  5

b sum  tensor(-0.5963, device='cuda:0')


training model  2  /  3
preparing input weights
model  0  /  2
model  1  /  2

TRAINING MODEL level : 0, level index: 0 / 1
model loadedd from file  False
training model with 5 iters and 0.009 lr, 128 hidden params and 16 classes
standardizing data 
TRAINING

epoch  1  /  5

b sum  tensor(-0.1537, device='cuda:0')
TRAINING

epoch  2  /  5

b sum  tensor(-0.2442, device='cuda:0')
TRAINING

epoch  3  /  5

b sum  tensor(-0.4412, device='cuda:0')
TRAINING

epoch  4  /  5

b sum  tensor(-0.4591, device='cuda:0')
TRAINING

epoch  5  /  5

b sum  tensor(-0.5298, device='cuda:0')


 --- FINDING TEST ACCURACY --- 

-----DOING MODEL INFERENCE ------- 
----- MODEL INFERENCE DONE ------- 
no of parameters in one model: 35600
----- CALCULATING K-NN RECALL FOR EACH POINT ------- 
1 models, 1 bins 


mean accuracy  tensor(0.7874)
mean candidate set size tensor(74863.5391)

average query time: 0.25, standard deviation: 0.03
1 models, 2 bins 


mean accuracy  tensor(0.9393)
mean candidate set size tensor(144833.0781)

average query time: 0.34, standard deviation: 0.05
1 models, 3 bins 


mean accuracy  tensor(0.9803)
mean candidate set size tensor(213845.9844)

average query time: 0.43, standard deviation: 0.08
2 models, 1 bins 


mean accuracy  tensor(0.8100)
mean candidate set size tensor(80905.3281)

average query time: 0.25, standard deviation: 0.03
2 models, 2 bins 


mean accuracy  tensor(0.9469)
mean candidate set size tensor(151791.4688)

average query time: 0.34, standard deviation: 0.05
2 models, 3 bins 


mean accuracy  tensor(0.9828)
mean candidate set size tensor(220971.2344)

average query time: 0.42, standard deviation: 0.05
3 models, 1 bins 


mean accuracy  tensor(0.8711)
mean candidate set size tensor(98631.6641)

average query time: 0.25, standard deviation: 0.02
3 models, 2 bins 


mean accuracy  tensor(0.9565)
mean candidate set size tensor(176668.7031)

average query time: 0.36, standard deviation: 0.08
3 models, 3 bins 


mean accuracy  tensor(0.9826)
mean candidate set size tensor(249204.3750)

average query time: 0.42, standard deviation: 0.04
first bin accuracy
0.8710900545120239
candidate_set_size of first bin on average
98631.6640625
