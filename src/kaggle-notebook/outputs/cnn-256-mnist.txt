/kaggle/input/neural-partitioner-dsit/main.py:173: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /usr/local/src/pytorch/torch/csrc/utils/tensor_new.cpp:245.)
  Y = prepare.dist_rank(torch.tensor(X, dtype=float), k_train, opt=options, data=data, distance_metric = distance_metric)
/kaggle/input/neural-partitioner-dsit/main.py:224: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  Y = torch.tensor(Y, dtype=torch.double , device=primary_device)
n OK training and prediction on the forest will be done using one model only 
RUNNING WITH: epochs=10; lr=0.009; n_bins=256; levels=0; branching=256; model type=cnn
 -- READING PATHS -- 
preparing knn with k =  10
total_chunks
200
0/200
Preparing dataset tensor
prepping k-NN Matrix tensor
BUILDING TREE
BUILDING TREE 0 / 3
 -- BUILDING TREE WITH 0 LEVELS AND 256 BRANCHING -- 
BUILDING TREE 1 / 3
 -- BUILDING TREE WITH 0 LEVELS AND 256 BRANCHING -- 
BUILDING TREE 2 / 3
 -- BUILDING TREE WITH 0 LEVELS AND 256 BRANCHING -- 
no of parameters in one model: 189858
training forest
training model  0  /  3
preparing input weights

TRAINING MODEL level : 0, level index: 0 / 1
model loadedd from file  False
training model with 10 iters and 0.009 lr, 128 hidden params and 256 classes
standardizing data 

[X_scaled_2] has shape : torch.Size([60000, 28, 28])
TRAINING

epoch  1  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  2  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  3  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  4  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  5  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  6  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  7  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  8  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  9  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  10  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)


training model  1  /  3
preparing input weights
model  0  /  1

TRAINING MODEL level : 0, level index: 0 / 1
model loadedd from file  False
training model with 10 iters and 0.009 lr, 128 hidden params and 256 classes
standardizing data 

[X_scaled_2] has shape : torch.Size([60000, 28, 28])
TRAINING

epoch  1  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  2  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  3  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  4  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  5  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  6  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  7  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  8  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  9  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  10  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)


training model  2  /  3
preparing input weights
model  0  /  2
model  1  /  2

TRAINING MODEL level : 0, level index: 0 / 1
model loadedd from file  False
training model with 10 iters and 0.009 lr, 128 hidden params and 256 classes
standardizing data 

[X_scaled_2] has shape : torch.Size([60000, 28, 28])
TRAINING

epoch  1  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  2  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  3  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  4  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  5  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  6  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  7  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  8  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  9  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)
TRAINING

epoch  10  /  10

b sum  tensor(0., device='cuda:0', dtype=torch.float64)


 --- FINDING TEST ACCURACY --- 

-----DOING MODEL INFERENCE ------- 
----- MODEL INFERENCE DONE ------- 
no of parameters in one model: 189858
----- CALCULATING K-NN RECALL FOR EACH POINT ------- 
1 models, 1 bins 


mean accuracy  tensor(0.9969)
mean candidate set size tensor(49792.4883)

average query time: 0.23, standard deviation: 0.08
1 models, 2 bins 


mean accuracy  tensor(1.0000)
mean candidate set size tensor(54534.3633)

average query time: 0.25, standard deviation: 0.04
1 models, 3 bins 


mean accuracy  tensor(1.0000)
mean candidate set size tensor(56887.3672)

average query time: 0.29, standard deviation: 0.06
1 models, 4 bins 


mean accuracy  tensor(1.0000)
mean candidate set size tensor(57765.1719)

average query time: 0.32, standard deviation: 0.06
1 models, 5 bins 


mean accuracy  tensor(1.0000)
mean candidate set size tensor(58201.6250)

average query time: 0.36, standard deviation: 0.04
1 models, 6 bins 


mean accuracy  tensor(1.)
mean candidate set size tensor(58714.9805)

average query time: 0.43, standard deviation: 0.14
2 models, 1 bins 


mean accuracy  tensor(0.9999)
mean candidate set size tensor(52405.3398)

average query time: 0.21, standard deviation: 0.03
2 models, 2 bins 


mean accuracy  tensor(0.9999)
mean candidate set size tensor(54984.8008)

average query time: 0.25, standard deviation: 0.05
2 models, 3 bins 


mean accuracy  tensor(0.9999)
mean candidate set size tensor(55303.8789)

average query time: 0.29, standard deviation: 0.06
2 models, 4 bins 


mean accuracy  tensor(0.9999)
mean candidate set size tensor(55964.5625)

average query time: 0.33, standard deviation: 0.06
2 models, 5 bins 


mean accuracy  tensor(0.9999)
mean candidate set size tensor(56400.2891)

average query time: 0.39, standard deviation: 0.11
2 models, 6 bins 


mean accuracy  tensor(0.9999)
mean candidate set size tensor(56884.8203)

average query time: 0.41, standard deviation: 0.10
3 models, 1 bins 


mean accuracy  tensor(0.9999)
mean candidate set size tensor(57319.3906)

average query time: 0.21, standard deviation: 0.03
3 models, 2 bins 


mean accuracy  tensor(0.9999)
mean candidate set size tensor(57527.3359)

average query time: 0.25, standard deviation: 0.04
3 models, 3 bins 


mean accuracy  tensor(0.9999)
mean candidate set size tensor(57575.2656)

average query time: 0.29, standard deviation: 0.04
3 models, 4 bins 


mean accuracy  tensor(0.9999)
mean candidate set size tensor(58073.4844)

average query time: 0.36, standard deviation: 0.11
3 models, 5 bins 


mean accuracy  tensor(0.9999)
mean candidate set size tensor(58290.0156)

average query time: 0.37, standard deviation: 0.07
3 models, 6 bins 


mean accuracy  tensor(0.9999)
mean candidate set size tensor(58645.0430)

average query time: 0.40, standard deviation: 0.06
first bin accuracy
0.9998999834060669
candidate_set_size of first bin on average
57319.390625
